on:
  push:
    branches: ['main']

  release:
    types: [released]

  workflow_dispatch:
    inputs:
      release-type:
        type: choice
        description: 'Release Type'
        required: true
        options:
          - development
          - production
        default: development
      force-source-maps:
        type: boolean
        description: 'Force source maps'
        default: false

name: build-package

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16]

    steps:
      - name: WORKFLOW PARAMETERS
        run: |
          echo "::notice title=Release Type:: ${{ github.event.inputs.release-type }}"
          echo "::notice title=Force Source Maps :: ${{ github.event.inputs.force-source-maps }}"
          echo "::notice title=Build executed by:: @${{ github.actor }}"

      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main

      - name: Environment Preparation
        id: prep
        run: |
          ENABLE_SOURCE_MAPS=true
          UPLOAD_SOURCE_MAPS=false
          TAG_REF=${{ github.ref_name }}
          if [ "${{ github.event.inputs.release-type }}" = "production" ]; then 
            ENABLE_SOURCE_MAPS=false
            UPLOAD_SOURCE_MAPS=true
            TAG_REF=production
          fi
          if [ "${{ github.event.inputs.force-source-maps }}" = "true" ]; then 
            ENABLE_SOURCE_MAPS=true
          fi

          echo "ENABLE_SOURCE_MAPS=${ENABLE_SOURCE_MAPS}" >> $GITHUB_OUTPUT
          echo "UPLOAD_SOURCE_MAPS=${UPLOAD_SOURCE_MAPS}" >> $GITHUB_OUTPUT
          echo "tag1=${{ steps.package-version.outputs.current-version}}-${TAG_REF}" >> $GITHUB_OUTPUT
          echo "tag2=${{ steps.package-version.outputs.current-version}}-${{ github.run_id }}-${TAG_REF}" >> $GITHUB_OUTPUT
          echo "tag3=${{ github.run_id }}" >> $GITHUB_OUTPUT
      - name: Create image
        run: |
          echo "EXCLUDE_SOURCE_MAPS=${{ !steps.prep.outputs.ENABLE_SOURCE_MAPS }}"

      - name: Generate Summary
        run: |
          echo "## :rocket: Docker image creation summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY 
          echo "Tags:" >> $GITHUB_STEP_SUMMARY
          echo "- ${{ steps.prep.outputs.tag1 }}" >> $GITHUB_STEP_SUMMARY
          echo "- ${{ steps.prep.outputs.tag2 }}" >> $GITHUB_STEP_SUMMARY
          echo "- ${{ steps.prep.outputs.tag3 }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY 
          echo "Enable Source Maps: ${{ steps.prep.outputs.ENABLE_SOURCE_MAPS }}" >> $GITHUB_STEP_SUMMARY
          echo "Upload Source Maps: ${{ steps.prep.outputs.UPLOAD_SOURCE_MAPS }}" >> $GITHUB_STEP_SUMMARY
